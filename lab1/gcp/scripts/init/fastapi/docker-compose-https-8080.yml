services:
  nginx-8080:
    container_name: nginx-8080
    hostname: -DCK-nginx-8080
    build:
      context: ./nginx/nginx-8080
      dockerfile: Dockerfile
    environment:
      HOST_HOSTNAME: $${HOSTNAME}
    network_mode: host
    volumes:
      - /etc/ssl/app/cert.pem:/etc/ssl/app/cert.pem
      - /etc/ssl/app/key.pem:/etc/ssl/app/key.pem
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
  nginx-8080-ipv6:
    container_name: nginx-8080-ipv6
    hostname: -DCK-nginx-8080-ipv6
    build:
      context: ./nginx/nginx-8080
      dockerfile: Dockerfile
    environment:
      HOST_HOSTNAME: $${HOSTNAME}
    network_mode: host
    volumes:
      - /etc/ssl/app/cert.pem:/etc/ssl/app/cert.pem
      - /etc/ssl/app/key.pem:/etc/ssl/app/key.pem
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
  nginx-8080-http-80:
    container_name: nginx-8080-http-80
    hostname: -DCK-nginx-8080-http-80
    build:
      context: ./app/app
      dockerfile: Dockerfile
    environment:
      HOST_HOSTNAME: $${HOSTNAME}
    network_mode: host
    command: uvicorn main:app --host '0.0.0.0' --port 80
    restart: always
  nginx-8080-http-80-ipv6:
    container_name: nginx-8080-http-80-ipv6
    hostname: -DCK-nginx-8080-http-80-ipv6
    build:
      context: ./app/app
      dockerfile: Dockerfile
    environment:
      HOST_HOSTNAME: $${HOSTNAME}
    network_mode: host
    command: uvicorn main:app --host '::' --port 80
    restart: always
